{"version":3,"sources":["components/Button/index.jsx","components/Card/index.jsx","components/modal/index.jsx","pages/api/index.js","pages/api/game/index.js","pages/api/ranking/index.js","pages/jogo/conquistas.js","components/ComoJogar/index.jsx","pages/api/categories/index.js","pages/api/word/index.js","assets/images/trofeu.svg","index.js","pages/home/index.jsx","pages/jogo/index.jsx","pages/admin/index.jsx","pages/categorias/index.jsx","pages/palavras/index.jsx","pages/ranking/index.jsx"],"names":["Button","props","className","Card","children","Modal","isOpen","onClose","hiddenCloseButton","style","display","onClick","api","axios","create","baseURL","getGameModeByCategory","categoryId","get","getGameModeByRandomWords","createPlayerInRanking","body","post","getRanking","conquistasDisponíveis","id","title","description","verificaSeConquistaNaoFoiFeita","idConquistaDisponivel","conquistas","some","conquista","ComoJogar","useState","setisOpen","getAllCategories","updateCategories","put","newCategory","deleteCategory","delete","getAllWord","updateWord","newWord","deleteWord","ReactDOM","render","StrictMode","path","exact","component","setIsOpen","categoriaSelecionada","setCategoriaSelecionada","categorias","setCategorias","a","res","data","console","log","useEffect","fetchCategorias","value","onChange","e","target","map","categoria","name","to","setCategoria","palavraEscondida","setPalavraEscondida","palavraCorreta","setPalavraCorreta","palavras","setPalavras","letrasDigitadas","setLetrasDigitadas","pontuação","setPontuação","letraAtual","setLetraAtual","erros","setErros","rodada","setRodada","isModalOpen","setIsModalOpen","seuNome","setSeuNome","shouldRedirect","setShouldRedirect","setConquistas","mode","useParams","request","category","proximaRodada","mostraPalavraParaAcertar","palavra","novaPalavraEscondida","i","length","includes","push","forEach","letra","acabarJogo","novaPalavraCorreta","player","score","achievements","error","pontosPorCadaLetra","filter","fetchPalavrasByGameMode","achievement","find","conquistaDisponível","toast","verificaConquistas","disabled","_","index","word","toUpperCase","maxLength","form","setForm","newForm","idCategoria","onChangeInputEdit","event","add","onEditarCategoria","onExcluirCategoria","fetchPalavras","idPalavra","onEditarPalavra","onExcluirPalavra","ranking","setRanking","isOpenModal","setIsOpenModal","conquistasJogador","setConquistasJogador","filteredPlayers","sort","b","slice","fetchRanking","width","height","backgroundColor","margin","padding","mostraConquistas","src","trofeu","opacity","alt","document","getElementById"],"mappings":"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","file":"static/js/main.d68df0b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './index.css'\r\n\r\nexport default function Button(props) {\r\n  return <button className='button' {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport './style.css'\r\n\r\nexport function Card({ children }) {\r\n  return <div className='card'>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport function Modal({ children, isOpen, onClose, hiddenCloseButton }) {\r\n  return (\r\n    <div className=\"modal\" style={{ display: isOpen ? \"unset\" : \"none\" }}>\r\n      <div className=\"modal-content\">\r\n        {children}\r\n        {!hiddenCloseButton && <button className='close' onClick={onClose}>X</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://hangman-game-web-backend.herokuapp.com/api'\r\n})\r\n","import { api } from \"..\";\r\n\r\nexport const getGameModeByCategory = categoryId => api.get(`/words/mode/${categoryId}`)\r\nexport const getGameModeByRandomWords = () => api.get(`/words/mode/random`)\r\n","import { api } from \"..\";\r\n\r\nexport const createPlayerInRanking = (body) => api.post(\"/rankings\", body);\r\nexport const getRanking = () => api.get(\"/rankings\");\r\n","import { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst conquistasDisponíveis = [\r\n  {\r\n    id: 30,\r\n    title: \"Caçador de zumbis.\",\r\n    description: \"Acertou vinte palavras consecutivas.\",\r\n  },\r\n  {\r\n    id: 12,\r\n    title: \"Corte limpo!\",\r\n    description: \"Acertou a palavra sem cometer nenhum erro.\",\r\n  },\r\n  {\r\n    id: 29,\r\n    title: \"Especialista em sobrevivência.\",\r\n    description: \"Acertou dez palavras consecutivas.\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Foi nada! Só uma mordidinha...\",\r\n    description: \"Acertou a palavra depois de 5 erros.\",\r\n  },\r\n  {\r\n    id: 31,\r\n    title: \"Mais sorte na próxima vida...\",\r\n    description: \"Perdeu na primeira rodada.\",\r\n  },\r\n  {\r\n    id: 13,\r\n    title: \"Ninguém é perfeito.\",\r\n    description: \"Acertou a palavra depois de apenas 1 erro.\",\r\n  },\r\n  {\r\n    id: 27,\r\n    title: \"Sobrevivente iniciante.\",\r\n    description: \"Acertou quatro palavras consecutivas.\",\r\n  },\r\n  {\r\n    id: 25,\r\n    title: \"Sorte de iniciante.\",\r\n    description: \"Acertou duas palavras consecutivas.\",\r\n  },\r\n  {\r\n    id: 26,\r\n    title: \"Talvez não seja só sorte!\",\r\n    description: \"Acertou três palavras consecutivas.\",\r\n  },\r\n  {\r\n    id: 28,\r\n    title: \"Veterano de apocalipse.\",\r\n    description: \"Acertou cinco palavras consecutivas.\",\r\n  },\r\n];\r\n\r\nfunction verificaSeConquistaNaoFoiFeita(idConquistaDisponivel, conquistas) {\r\n  return !conquistas.some(\r\n    (conquista) => conquista.id === idConquistaDisponivel\r\n  );\r\n}\r\n\r\nexport function verificaConquistas(erros, conquistas, setConquistas, rodada) {\r\n  // Conquista 12\r\n  if (erros.length === 0 && verificaSeConquistaNaoFoiFeita(12, conquistas)) {\r\n    const achievement = conquistasDisponíveis.find(\r\n      (conquistaDisponível) => conquistaDisponível.id === 12\r\n    );\r\n    setConquistas([...conquistas, achievement]);\r\n\r\n    toast(\r\n      <div>\r\n        {achievement.title}\r\n        <br />\r\n        {achievement.description}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Conquista 25\r\n  if (rodada === 2 && verificaSeConquistaNaoFoiFeita(25, conquistas)) {\r\n    const achievement = conquistasDisponíveis.find(\r\n      (conquistaDisponível) => conquistaDisponível.id === 25\r\n    );\r\n    setConquistas([...conquistas, achievement]);\r\n\r\n    toast(\r\n      <div>\r\n        {achievement.title}\r\n        <br />\r\n        {achievement.description}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Conquista 26\r\n  if (rodada === 3 && verificaSeConquistaNaoFoiFeita(26, conquistas)) {\r\n    const achievement = conquistasDisponíveis.find(\r\n      (conquistaDisponível) => conquistaDisponível.id === 26\r\n    );\r\n    setConquistas([...conquistas, achievement]);\r\n\r\n    toast(\r\n      <div>\r\n        {achievement.title}\r\n        <br />\r\n        {achievement.description}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"../Button\";\r\nimport { Modal } from \"../modal\";\r\nimport \"./index.css\";\r\n\r\nexport function ComoJogar() {\r\n  const [isOpen, setisOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"como-jogar\">\r\n      <Button onClick={() => setisOpen(true)}>Como Jogar?</Button>\r\n      <Modal isOpen={isOpen} onClose={() => setisOpen(false)}>Como Jogar?</Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { api } from \"..\";\r\n\r\nexport const getAllCategories = () => api.get('/categories')\r\nexport const updateCategories = (id, body) => api.put(`/categories/${id}`, body)\r\nexport const newCategory = body => api.post(`/categories`, body)\r\nexport const deleteCategory = id => api.delete(`/categories/${id}`)\r\n","import { api } from \"..\";\r\n\r\nexport const getAllWord = () => api.get('/words')\r\nexport const updateWord = (id, body) => api.put(`/words/${id}`, body)\r\nexport const newWord = body => api.post(`/words`, body)\r\nexport const deleteWord = id => api.delete(`/words/${id}`)\r\n","export default __webpack_public_path__ + \"static/media/trofeu.9ce1eeac.svg\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Jogo } from \"./pages/jogo\";\r\nimport Admin from \"./pages/admin\";\r\nimport { Home } from \"./pages/home\";\r\nimport { Categorias } from \"./pages/categorias\";\r\nimport { Palavras } from \"./pages/palavras\";\r\nimport { Ranking } from \"./pages/ranking\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/jogo-da-forca\" exact component={Home} />\r\n        <Route path=\"/jogo/:mode\" component={Jogo} exact />\r\n        <Route path=\"/admin\" component={Admin} />\r\n        <Route path=\"/categorias\" component={Categorias} />\r\n        <Route path=\"/palavras\" component={Palavras} />\r\n        <Route path=\"/ranking\" component={Ranking} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { ComoJogar } from \"../../components/ComoJogar\";\r\nimport { Modal } from \"../../components/modal\";\r\nimport { getAllCategories } from \"../api/categories\";\r\nimport \"./index.css\";\r\n\r\nexport const Home = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [categoriaSelecionada, setCategoriaSelecionada] = useState(\"\");\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCategorias();\r\n  }, []);\r\n\r\n  async function fetchCategorias() {\r\n    try {\r\n      const res = await getAllCategories();\r\n      setCategorias(res.data);\r\n      setCategoriaSelecionada(res.data[0].id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n        <div className=\"game-mode\">\r\n          <select\r\n            value={categoriaSelecionada}\r\n            onChange={(e) => setCategoriaSelecionada(e.target.value)}\r\n          >\r\n            {categorias.map((categoria) => (\r\n              <option key={categoria.id} value={categoria.id}>\r\n                {categoria.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div>\r\n            <Link to={`/jogo/${categoriaSelecionada}`}>\r\n              <Button>Jogar com categoria</Button>\r\n            </Link>\r\n          </div>\r\n          <Link to=\"/jogo/random\">\r\n            <Button>Jogar com categorias aleatórias</Button>\r\n          </Link>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"container\">\r\n        <Link to=\"/admin\">\r\n          <p>Jogo da forca</p>\r\n        </Link>\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setIsOpen(true)}>Iniciar Jogo</Button>\r\n          <Link to=\"/ranking\">\r\n            <Button>Ranking</Button>\r\n          </Link>\r\n          <ComoJogar></ComoJogar>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { Card } from \"../../components/Card\";\r\nimport { Modal } from \"../../components/modal\";\r\nimport { getGameModeByCategory, getGameModeByRandomWords } from \"../api/game\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { createPlayerInRanking } from \"../api/ranking\";\r\nimport { verificaConquistas } from \"./conquistas\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./style.css\";\r\n\r\nexport function Jogo() {\r\n  const [categoria, setCategoria] = useState([]);\r\n  const [palavraEscondida, setPalavraEscondida] = useState([]);\r\n  const [palavraCorreta, setPalavraCorreta] = useState([]);\r\n  const [palavras, setPalavras] = useState([]);\r\n  const [letrasDigitadas, setLetrasDigitadas] = useState([]);\r\n  const [pontuação, setPontuação] = useState(0);\r\n  const [letraAtual, setLetraAtual] = useState(\"\");\r\n  const [erros, setErros] = useState([]);\r\n  const [rodada, setRodada] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [seuNome, setSeuNome] = useState(\"\");\r\n  const [shouldRedirect, setShouldRedirect] = useState(false);\r\n  const [conquistas, setConquistas] = useState([]);\r\n\r\n  const { mode } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchPalavrasByGameMode();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    mostraPalavraParaAcertar(palavraCorreta);\r\n  }, [letrasDigitadas]);\r\n\r\n  useEffect(() => {\r\n    if (rodada !== 0) {\r\n      verificaConquistas(erros, conquistas, setConquistas, rodada);\r\n      setPontuação(pontuação + 100);\r\n\r\n      if (palavras.length <= rodada) {\r\n        setIsModalOpen(true);\r\n        return;\r\n      }\r\n      setCategoria(palavras[rodada].category.name);\r\n      proximaRodada(palavras[rodada].name);\r\n    }\r\n  }, [rodada]);\r\n\r\n  async function fetchPalavrasByGameMode() {\r\n    const request =\r\n      mode === \"random\"\r\n        ? getGameModeByRandomWords\r\n        : () => getGameModeByCategory(mode);\r\n    try {\r\n      const res = await request();\r\n      setPalavras(res.data);\r\n      setCategoria(res.data[rodada].category.name);\r\n      proximaRodada(res.data[rodada].name);\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function mostraPalavraParaAcertar(palavra) {\r\n    const novaPalavraEscondida = [];\r\n    const erros = [];\r\n\r\n    for (let i = 0; i < palavra.length; i++) {\r\n      letrasDigitadas.includes(palavra[i])\r\n        ? novaPalavraEscondida.push(palavra[i])\r\n        : novaPalavraEscondida.push(\" \");\r\n    }\r\n\r\n    letrasDigitadas.forEach(\r\n      (letra) => !novaPalavraEscondida.includes(letra) && erros.push(letra)\r\n    );\r\n    setPalavraEscondida(novaPalavraEscondida);\r\n    setErros(erros);\r\n\r\n    if (erros.length === 6) {\r\n      acabarJogo();\r\n    }\r\n  }\r\n\r\n  function falarLetra() {\r\n    if (letrasDigitadas.includes(letraAtual)) {\r\n      return;\r\n    }\r\n    setLetrasDigitadas([...letrasDigitadas, letraAtual]);\r\n    setLetraAtual(\"\");\r\n  }\r\n\r\n  function verifyDisabledProximaPalavra() {\r\n    return palavraCorreta.some(\r\n      (letra, index) => palavraEscondida[index] !== letra\r\n    );\r\n  }\r\n\r\n  function proximaRodada(palavra) {\r\n    setLetrasDigitadas([]);\r\n    const novaPalavraCorreta = [];\r\n\r\n    for (let i = 0; i < palavra.length; i++) {\r\n      novaPalavraCorreta.push(palavra[i]);\r\n    }\r\n\r\n    setPalavraCorreta(novaPalavraCorreta);\r\n    mostraPalavraParaAcertar(palavra);\r\n  }\r\n\r\n  async function onFinalizarJogo() {\r\n    try {\r\n      await createPlayerInRanking({\r\n        player: seuNome,\r\n        score: pontuação,\r\n        achievements: conquistas.map((conquista) => ({ id: conquista.id })),\r\n      });\r\n\r\n      setShouldRedirect(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function acabarJogo() {\r\n    const pontosPorCadaLetra =\r\n      palavraEscondida.filter((palavra) => palavra !== \" \").length * 5;\r\n\r\n    setPontuação(pontuação + pontosPorCadaLetra);\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {shouldRedirect && <Redirect to=\"/ranking\" />}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        hiddenCloseButton\r\n      >\r\n        <div className=\"seu-nome\">\r\n          <div>\r\n            Digite seu nome:\r\n            <input\r\n              value={seuNome}\r\n              onChange={(e) => setSeuNome(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <Button disabled={!seuNome} onClick={onFinalizarJogo}>\r\n            GO\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"jogo\">\r\n        Jogo\r\n        <div>\r\n          <div className=\"erros\">\r\n            <div>Qtd erros</div>\r\n            <div>\r\n              {erros.map((_, index) => (\r\n                <div key={index} className=\"erro\">\r\n                  X\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"palavra-escondida\">\r\n            <div>Categoria: {categoria}</div>\r\n            <div>\r\n              {palavraEscondida.map((word, index) => (\r\n                <Card key={word + \"palavra-escondida\" + index}>{word}</Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"botoes\">\r\n            <Button onClick={acabarJogo}>Desistir</Button>\r\n            <Button\r\n              onClick={() => setRodada(rodada + 1)}\r\n              disabled={verifyDisabledProximaPalavra()}\r\n            >\r\n              Próxima palavra\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"letras-cantadas\">\r\n            <p>Letras já faladas</p>\r\n            <div>\r\n              {letrasDigitadas.map((word, index) => (\r\n                <Card key={word + \"letras-digitadas\" + index}>{word}</Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"digite-a-letra\">\r\n            Digite a letra\r\n            <input\r\n              value={letraAtual}\r\n              onChange={(e) => setLetraAtual(e.target.value.toUpperCase())}\r\n              maxLength={1}\r\n            ></input>\r\n            <Button disabled={!letraAtual} onClick={falarLetra}>\r\n              Falar\r\n            </Button>\r\n          </div>\r\n          <div className=\"pontuacao\">\r\n            Pontuação\r\n            <Card>{pontuação} pts</Card>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/jogo-da-forca\">\r\n          <Button>Voltar</Button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport \"./index.css\";\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <div className=\"admin\">\r\n      <Link to=\"/jogo-da-forca\">\r\n        <Button>Voltar</Button>\r\n      </Link>\r\n      <Link to=\"/categorias\">\r\n        <Button>Gerenciar Categorias</Button>\r\n      </Link>\r\n      <Link to=\"/palavras\">\r\n        <Button>Gerenciar Palavras</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport {\r\n  deleteCategory,\r\n  getAllCategories,\r\n  newCategory,\r\n  updateCategories,\r\n} from \"../api/categories\";\r\nimport \"./index.css\";\r\n\r\nexport function Categorias() {\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [form, setForm] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchCategorias();\r\n  }, []);\r\n\r\n  async function fetchCategorias() {\r\n    const newForm = {};\r\n    try {\r\n      const res = await getAllCategories();\r\n      setCategorias(res.data);\r\n      res.data.forEach((categoria) => {\r\n        newForm[categoria.name] = categoria.name;\r\n      });\r\n      setForm(newForm);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function onExcluirCategoria(idCategoria) {\r\n    try {\r\n      await deleteCategory(idCategoria);\r\n      await fetchCategorias();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function onEditarCategoria(categoria) {\r\n    try {\r\n      await updateCategories(categoria.id, {\r\n        name: form[categoria.name],\r\n      });\r\n\r\n      await fetchCategorias();\r\n    } catch (error) {}\r\n  }\r\n\r\n  function onChangeInputEdit(event) {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  async function onAddCategoria() {\r\n    try {\r\n      await newCategory({\r\n        name: form.add,\r\n      });\r\n      setForm({ add: \"\" });\r\n      await fetchCategorias();\r\n    } catch (error) {}\r\n  }\r\n\r\n  return (\r\n    <div className=\"categorias\">\r\n      <Link to=\"/admin\">\r\n        <Button>Voltar</Button>\r\n      </Link>\r\n      <table>\r\n        <tr>\r\n          <th>Categoria</th>\r\n          <th>Ações</th>\r\n        </tr>\r\n        {categorias.map((categoria) => {\r\n          return (\r\n            <tr key={categoria.name}>\r\n              <td>\r\n                <input\r\n                  name={categoria.name}\r\n                  value={form[categoria.name]}\r\n                  onChange={onChangeInputEdit}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  disabled={categoria.name === form[categoria.name]}\r\n                  onClick={() => onEditarCategoria(categoria)}\r\n                >\r\n                  Editar\r\n                </button>\r\n                <button onClick={() => onExcluirCategoria(categoria.id)}>\r\n                  Excluir\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        <tr>\r\n          <td>\r\n            <input name=\"add\" value={form.add} onChange={onChangeInputEdit} />\r\n          </td>\r\n          <td>\r\n            <button\r\n              disabled={categorias\r\n                .map((categoria) => categoria.name)\r\n                .includes(form.add)}\r\n              onClick={onAddCategoria}\r\n            >\r\n              Adicionar\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { getAllCategories } from \"../api/categories\";\r\nimport { deleteWord, getAllWord, newWord, updateWord } from \"../api/word\";\r\nimport \"./index.css\";\r\n\r\nexport function Palavras() {\r\n  const [palavras, setPalavras] = useState([]);\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [categoriaSelecionada, setCategoriaSelecionada] = useState(0);\r\n  const [form, setForm] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchPalavras();\r\n    fetchCategorias();\r\n  }, []);\r\n\r\n  async function fetchCategorias() {\r\n    const newForm = {};\r\n    try {\r\n      const res = await getAllCategories();\r\n      setCategorias(res.data);\r\n      setCategoriaSelecionada(res.data[0].id);\r\n      res.data.forEach((categoria) => {\r\n        newForm[categoria.name] = categoria.name;\r\n      });\r\n      setForm(newForm);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function fetchPalavras() {\r\n    const newForm = {};\r\n    try {\r\n      const res = await getAllWord();\r\n      setPalavras(res.data);\r\n      res.data.forEach((word) => {\r\n        newForm[word.name] = word.name;\r\n      });\r\n      setForm(newForm);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function onExcluirPalavra(idPalavra) {\r\n    try {\r\n      await deleteWord(idPalavra);\r\n      await fetchPalavras();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function onEditarPalavra(palavra) {\r\n    try {\r\n      await updateWord(palavra.id, {\r\n        name: form[palavra.name],\r\n      });\r\n      await fetchPalavras();\r\n    } catch (error) {}\r\n  }\r\n\r\n  function onChangeInputEdit(event) {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  async function onAddPalavra() {\r\n    try {\r\n      await newWord({\r\n        name: form.add,\r\n        category: {\r\n          id: categoriaSelecionada,\r\n        },\r\n      });\r\n      setForm({ add: \"\" });\r\n      await fetchPalavras();\r\n    } catch (error) {}\r\n  }\r\n\r\n  return (\r\n    <div className=\"palavras\">\r\n      <Link to=\"/admin\">\r\n        <Button>Voltar</Button>\r\n      </Link>\r\n      <table>\r\n        <tr>\r\n          <th>Categoria</th>\r\n          <th>Palavra</th>\r\n          <th>Ações</th>\r\n        </tr>\r\n        {palavras.map((palavra) => {\r\n          return (\r\n            <tr>\r\n              <td>\r\n                <input disabled value={palavra.category.name} />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  name={palavra.name}\r\n                  value={form[palavra.name]}\r\n                  onChange={onChangeInputEdit}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  disabled={palavra.name === form[palavra.name]}\r\n                  onClick={() => onEditarPalavra(palavra)}\r\n                >\r\n                  Editar\r\n                </button>\r\n                <button onClick={() => onExcluirPalavra(palavra.id)}>\r\n                  Excluir\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        <tr>\r\n          <td>\r\n            <select\r\n              value={categoriaSelecionada}\r\n              onChange={(e) => setCategoriaSelecionada(e.target.value)}\r\n            >\r\n              {categorias.map((categoria) => (\r\n                <option value={categoria.id}>{categoria.name}</option>\r\n              ))}\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <input name=\"add\" value={form.add} onChange={onChangeInputEdit} />\r\n          </td>\r\n          <td>\r\n            <button\r\n              disabled={palavras\r\n                .map((palavra) => palavra.name)\r\n                .includes(form.add)}\r\n              onClick={onAddPalavra}\r\n            >\r\n              Adicionar\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { getRanking } from \"../api/ranking\";\r\nimport trofeu from \"../../assets/images/trofeu.svg\";\r\nimport { Modal } from \"../../components/modal\";\r\nimport \"./index.css\";\r\n\r\nexport function Ranking() {\r\n  const [ranking, setRanking] = useState([]);\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [conquistasJogador, setConquistasJogador] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRanking();\r\n  }, []);\r\n\r\n  async function fetchRanking() {\r\n    try {\r\n      const res = await getRanking();\r\n      const filteredPlayers = res.data\r\n        .sort((a, b) => b.score - a.score)\r\n        .slice(0, 10);\r\n      setRanking(filteredPlayers);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function mostraConquistas(achievements) {\r\n    setConquistasJogador(achievements);\r\n    setIsOpenModal(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpenModal} onClose={() => setIsOpenModal(false)}>\r\n        <div className=\"conquistas\">\r\n          <div className=\"title\">Conquistas</div>\r\n          {conquistasJogador.map(({ title, description }) => {\r\n            return (\r\n              <div className=\"conquista\">\r\n                <div>{title}</div>\r\n                <div>{description}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Modal>\r\n      <div className=\"ranking\">\r\n        <div className=\"lista\">\r\n          <div className=\"posicao\">\r\n            <div>Nome</div>\r\n            <div>Pontuação</div>\r\n            <div className=\"conquistas\">Conquistas</div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"80%\",\r\n              height: \"2px\",\r\n              backgroundColor: \"white\",\r\n              margin: 10,\r\n            }}\r\n          ></div>\r\n          {ranking.map(({ player, score, achievements }, index) => {\r\n            return (\r\n              <div key={player + index} className=\"posicao\">\r\n                <div>{player}</div>\r\n                <div>{score}</div>\r\n                <div className=\"conquistas\">\r\n                  <Button\r\n                    disabled={!achievements.length}\r\n                    style={{ padding: 4 }}\r\n                    onClick={() => mostraConquistas(achievements)}\r\n                  >\r\n                    <img\r\n                      src={trofeu}\r\n                      style={{\r\n                        width: 30,\r\n                        opacity: `${!achievements.length ? \"0.3\" : 1}`,\r\n                      }}\r\n                      alt=\"trofeu\"\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <Link to=\"/jogo-da-forca\">\r\n          <Button>Voltar</Button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}